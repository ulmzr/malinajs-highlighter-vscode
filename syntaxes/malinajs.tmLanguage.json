{
   "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
   "name": "Malina.js",
   "scopeName": "source.malinajs",
   "patterns": [
      {
         "include": "#comment"
      },
      {
         "include": "#script"
      },
      {
         "include": "#style"
      },
      {
         "include": "#tag"
      },
      {
         "include": "#expression"
      }
   ],
   "repository": {
      "comment": {
         "name": "comment.block",
         "begin": "<!--",
         "beginCaptures": {
            "0": {
               "name": "punctuation.definition.tag"
            }
         },
         "end": "-->",
         "endCaptures": {
            "0": {
               "name": "punctuation.definition.tag"
            }
         }
      },
      "script": {
         "begin": "(<)(script)([^>]*)(>)",
         "beginCaptures": {
            "1": {
               "name": "punctuation.definition.tag"
            },
            "2": {
               "name": "entity.name.tag"
            },
            "3": {
               "name": "entity.other.attribute-name",
               "patterns": [
                  {
                     "include": "#attributes"
                  }
               ]
            },
            "4": {
               "name": "punctuation.definition.tag"
            }
         },
         "end": "(</)(script)(>)",
         "endCaptures": {
            "1": {
               "name": "punctuation.definition.tag"
            },
            "2": {
               "name": "entity.name.tag"
            },
            "3": {
               "name": "punctuation.definition.tag"
            }
         },
         "patterns": [
            {
               "match": "(\\$|onMount|onDestroy|attributes|props|option|context|emit)",
               "name": "support.class"
            },
            {
               "include": "source.js"
            }
         ]
      },
      "style": {
         "begin": "(<)(style)([^>]*)(>)",
         "beginCaptures": {
            "1": {
               "name": "punctuation.definition.tag"
            },
            "2": {
               "name": "entity.name.tag"
            },
            "3": {
               "name": "entity.other.attribute-name",
               "patterns": [
                  {
                     "include": "#attributes"
                  }
               ]
            },
            "4": {
               "name": "punctuation.definition.tag"
            }
         },
         "end": "(</)(style)(>)",
         "endCaptures": {
            "1": {
               "name": "punctuation.definition.tag"
            },
            "2": {
               "name": "entity.name.tag"
            },
            "3": {
               "name": "punctuation.definition.tag"
            }
         },
         "patterns": [
            {
               "include": "source.css"
            }
         ]
      },
      "expression": {
         "begin": "({)",
         "beginCaptures": {
            "1": {
               "name": "punctuation.definition.tag"
            }
         },
         "end": "(})",
         "endCaptures": {
            "1": {
               "name": "punctuation.definition.tag"
            }
         },
         "patterns": [
            {
               "match": "(...)?(\\$(attributes|props|element|event))",
               "captures": {
                  "1": {
                     "name": "punctuation.definition.tag"
                  },
                  "2": {
                     "name": "support.class"
                  }
               }
            },
            {
               "include": "#keywords"
            },
            {
               "include": "source.js"
            }
         ]
      },
      "keywords": {
         "name": "keyword.control",
         "match": "([@#:/])((?:if|else|each|await|then|catch|html|slot|fragment))(?:(:)([a-zA-Z0-9_]+))?",
         "captures": {
            "1": {
               "name": "punctuation.definition.tag"
            },
            "2": {
               "name": "keyword.control"
            },
            "3": {
               "name": "punctuation.definition.tag"
            },
            "4": {
               "name": "entity.name.tag"
            }
         }
      },
      "tag": {
         "begin": "(</?)([^\\s/>]*)",
         "beginCaptures": {
            "1": {
               "name": "punctuation.definition.tag"
            },
            "2": {
               "name": "entity.name.tag",
               "patterns": [
                  {
                     "match": "[A-Z][\\w]*|fragment|slot|malina|component",
                     "name": "support.class"
                  },
                  {
                     "match": "(\\^)([a-zA-Z0-9]+)?",
                     "name": "keyword.control"
                  }
               ]
            }
         },
         "end": "(/?>)",
         "endCaptures": {
            "1": {
               "name": "punctuation.definition.tag"
            }
         },
         "name": "entity.other.attribute-name",
         "patterns": [
            {
               "include": "#attributes"
            }
         ]
      },
      "attributes": {
         "patterns": [
            {
               "match": "(property|export|global)",
               "captures": {
                  "1": {
                     "name": "keyword.control"
                  }
               }
            },
            {
               "include": "#anchors"
            },
            {
               "include": "#styles"
            },
            {
               "include": "#refs"
            },
            {
               "include": "#actions"
            },
            {
               "include": "#events"
            },
            {
               "include": "#expression"
            },
            {
               "include": "#string"
            }
         ]
      },
      "styles": {
         "match": "(style|class)(:)",
         "captures": {
            "1": {
               "name": "support.class"
            },
            "2": {
               "name": "punctuation.definition.tag"
            }
         }
      },
      "anchors": {
         "match": "(\\^)([a-zA-Z0-9]+)?",
         "captures": {
            "1": {
               "name": "keyword.control"
            },
            "2": {
               "name": "keyword.control"
            }
         }
      },
      "refs": {
         "match": "(\\#)([a-zA-Z0-9]+)?",
         "captures": {
            "1": {
               "name": "entity.name.tag"
            },
            "2": {
               "name": "entity.name.tag"
            }
         }
      },
      "actions": {
         "match": "(\\*|use:)([a-zA-Z0-9]+)?(=)?",
         "captures": {
            "1": {
               "name": "support.function"
            },
            "2": {
               "name": "support.function"
            }
         }
      },
      "events": {
         "match": "(@@|@|on:)([a-zA-Z0-9|]+)(:)?([a-zA-Z0-9|]+)?(=)?",
         "captures": {
            "1": {
               "name": "support.class"
            },
            "2": {
               "name": "support.class"
            },
            "3": {
               "name": "punctuation.definition.tag"
            },
            "4": {
               "name": "support.function"
            }
         }
      },
      "string": {
         "patterns": [
            {
               "include": "#quoted-string"
            },
            {
               "include": "#quoted-string-single"
            }
         ]
      },
      "quoted-string": {
         "begin": "\"",
         "beginCaptures": {
            "0": {
               "name": "string"
            }
         },
         "end": "(?<!\\\\)\"",
         "endCaptures": {
            "0": {
               "name": "string"
            }
         },
         "patterns": [
            {
               "include": "#expression"
            },
            {
               "match": "[^\"]|\\\"",
               "name": "string"
            }
         ]
      },
      "quoted-string-single": {
         "begin": "'",
         "beginCaptures": {
            "0": {
               "name": "string"
            }
         },
         "end": "(?<!\\\\)\\'",
         "endCaptures": {
            "0": {
               "name": "string"
            }
         },
         "patterns": [
            {
               "include": "#expression"
            },
            {
               "match": "[^']|\\'",
               "name": "string"
            }
         ]
      }
   }
}